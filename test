#!/usr/bin/env bash
set -e
cargo_craft() {
    set +e
    path=$(echo "$@" | awk '{ print $NF }')
    if [ -e "$path" ]; then
        rm -rf "$path"
    fi
    set -e
    cargo craft --quiet-add --no-rollback $*
}
exit_on_fail() {
    path="$1"
    shift
    declare -a args=( $* )
    if [ ${#args} -gt 0 ]; then
        set +e
        1>&2 echo -e "running \x1b[1;38;5;220m${path} $*\x1b[0m"
        (cd "$path" && cargo run --offline $*)
        if [ "$?" == 0 ]; then
            success "$path"
        else
            1>&2 echo -e "\x1b[1;38;5;160mFAILED: \x1b[0m${path}"
            exit 1
        fi
    else
        success "$path"
    fi
}
success() {
    path="$1"
    shift
    rm -rf "$path"
    set -e
    1>&2 echo -e "\x1b[1;38;5;70mSUCCEEDED: \x1b[0m${path}"
}
cbt() {
    path="$1"
    shift
    (cd "$path" && cargo check --offline -q)
    (cd "$path" && cargo build --offline -q)
    (cd "$path" && cargo test --offline -q)
    find "$path" -name errors.rs -exec cp {} $(basename "$path")-errors.rs \;
}
assert_file_exists() {
    path="$1"
    shift
    if [ -f "$path" ]; then
        1>&2 echo -e "${path} \x1b[1;38;5;70mexists\x1b[0m"
    else
        1>&2 echo -e "${path} \x1b[1;38;5;160mdoes not exist\x1b[0m"
        ls -latrh "$(dirname "$path")"
        exit 1
    fi
}
while [ "$(which cargo-craft)" != "$HOME/.cargo/bin/cargo-craft" ]; do
    rm -fv "$(which cargo-craft)"
done
cargo check -q
cargo install --offline --path .

cargo_craft -d serde_json -sc tests-cli-subcommands
cbt tests-cli-subcommands
assert_file_exists tests-cli-subcommands/Cargo.toml
assert_file_exists tests-cli-subcommands/.gitignore
assert_file_exists tests-cli-subcommands/.rustfmt.toml
assert_file_exists tests-cli-subcommands/tests-cli-subcommands.rs
exit_on_fail tests-cli-subcommands hello world


cargo_craft -d serde_json -c tests-cli
cbt tests-cli
assert_file_exists tests-cli/Cargo.toml
assert_file_exists tests-cli/.gitignore
assert_file_exists tests-cli/.rustfmt.toml
assert_file_exists tests-cli/tests-cli.rs
exit_on_fail tests-cli "hello world"

cargo_craft -d serde_json -Vc tests-cli-value-parser
cbt tests-cli-value-parser
assert_file_exists tests-cli-value-parser/Cargo.toml
assert_file_exists tests-cli-value-parser/.gitignore
assert_file_exists tests-cli-value-parser/.rustfmt.toml
assert_file_exists tests-cli-value-parser/tests-cli-value-parser.rs
exit_on_fail tests-cli-value-parser hello world
# exit_on_fail tests-cli-value-parser --std out "hello world"
# exit_on_fail tests-cli-value-parser --std err "hello world"

cargo_craft -d serde_json -cVs tests-cli-value-parser-subcommands
assert_file_exists tests-cli-value-parser-subcommands/Cargo.toml
assert_file_exists tests-cli-value-parser-subcommands/.gitignore
assert_file_exists tests-cli-value-parser-subcommands/.rustfmt.toml
assert_file_exists tests-cli-value-parser-subcommands/tests-cli-value-parser-subcommands.rs
exit_on_fail tests-cli-value-parser-subcommands hello world
# exit_on_fail tests-cli-value-parser-subcommands --std out hello world
# exit_on_fail tests-cli-value-parser-subcommands --std err hello world


cargo_craft -d serde_json tests-no-cli
cbt tests-no-cli
assert_file_exists tests-no-cli/Cargo.toml
assert_file_exists tests-no-cli/.gitignore
assert_file_exists tests-no-cli/.rustfmt.toml
if [ -f tests-no-cli/tests-no-cli-cli.rs ]; then
    1>&2 echo "command-line file should not have been rendered without providing '-c' option"
    exit 1
fi
exit_on_fail tests-no-cli


cargo_craft -d serde_json -c cargo-cli
cbt cargo-cli
assert_file_exists cargo-cli/Cargo.toml
assert_file_exists cargo-cli/.gitignore
assert_file_exists cargo-cli/.rustfmt.toml
assert_file_exists cargo-cli/cargo-cli.rs
exit_on_fail cargo-cli "hello world"


cargo install --offline --path .
